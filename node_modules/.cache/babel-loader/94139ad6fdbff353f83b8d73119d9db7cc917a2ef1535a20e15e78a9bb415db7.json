{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const FetchData = createAsyncThunk(\"global/fetch-data\", async (dt, thunkApi) => {\n  const {\n    rejectWithValue\n  } = thunkApi;\n  try {\n    const {\n      url\n    } = dt;\n    const response = await fetch(url);\n    if (!response.ok) {\n      return rejectWithValue(`This is an HTTP error: The status is ${response.status}`);\n    }\n    let actualData = await response.json();\n    return {\n      data: actualData === null || actualData === void 0 ? void 0 : actualData.Search,\n      url\n    };\n  } catch {\n    return rejectWithValue(\"Unknow error\");\n  }\n});","map":{"version":3,"names":["createAsyncThunk","FetchData","dt","thunkApi","rejectWithValue","url","response","fetch","ok","status","actualData","json","data","Search"],"sources":["/Users/aminbashanfar/Desktop/les-oies/Movie-cards/src/redux/global/api.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nexport const FetchData = createAsyncThunk(\r\n  \"global/fetch-data\",\r\n  async (dt, thunkApi) => {\r\n    const { rejectWithValue } = thunkApi;\r\n    try {\r\n      const { url } = dt;\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        return rejectWithValue(\r\n          `This is an HTTP error: The status is ${response.status}`\r\n        );\r\n      }\r\n      let actualData = await response.json();\r\n      return {\r\n        data: actualData?.Search,\r\n        url,\r\n      };\r\n    } catch {\r\n      return rejectWithValue(\"Unknow error\");\r\n    }\r\n  }\r\n);\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAO,MAAMC,SAAS,GAAGD,gBAAgB,CACvC,mBAAmB,EACnB,OAAOE,EAAE,EAAEC,QAAQ,KAAK;EACtB,MAAM;IAAEC;EAAgB,CAAC,GAAGD,QAAQ;EACpC,IAAI;IACF,MAAM;MAAEE;IAAI,CAAC,GAAGH,EAAE;IAClB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,OAAOJ,eAAe,CACnB,wCAAuCE,QAAQ,CAACG,MAAO,EAAC,CAC1D;IACH;IACA,IAAIC,UAAU,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IACtC,OAAO;MACLC,IAAI,EAAEF,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEG,MAAM;MACxBR;IACF,CAAC;EACH,CAAC,CAAC,MAAM;IACN,OAAOD,eAAe,CAAC,cAAc,CAAC;EACxC;AACF,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}